{
  "openapi": "3.0.3",
  "info": { 
    "title": "Auth Service API", 
    "version": "1.4.0", 
    "description": "Serviço de autenticação com JWT. Suporte a auto-cadastro para funcionários com validação de domínio de email, geração automática de senha e envio por email. Access tokens válidos por 8h, refresh tokens por 24h. Refresh tokens enviados exclusivamente em cookies HttpOnly." 
  },
  "paths": {
  "/auth/v1/login": {
      "post": {
        "summary": "Login",
        "tags": ["auth"],
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LoginInput" }, "example": { "email": "admin@nextlevel.com", "senha": "ADM2025" } } } },
        "responses": {
          "200": { "description": "Login bem-sucedido (refresh em cookie HttpOnly)", "headers": { "Set-Cookie": { "schema": { "type": "string", "example": "refreshToken=<httpOnly_jwt>; Path=/auth/v1; HttpOnly; SameSite=Strict" }, "description": "Contém o refresh token. Não é acessível via JS (HttpOnly)." } }, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthAccessOnly" }, "example": { "accessToken": "<access_jwt>", "tokenType": "Bearer", "expiresInHours": 8 } } } },
          "401": { "description": "Credenciais inválidas" }
        }
      }
    },
    "/auth/v1/register": {
      "post": {
        "summary": "Auto-cadastro de funcionário",
        "description": "Permite que funcionários se cadastrem fornecendo apenas o email. O sistema valida o domínio, gera uma senha de 6 dígitos e envia por email. Cria automaticamente o usuário com status ATIVO e tipo FUNCIONARIO.",
        "tags": ["auth"],
        "requestBody": { 
          "required": true, 
          "content": { 
            "application/json": { 
              "schema": { "$ref": "#/components/schemas/RegisterInput" }, 
              "example": { "email": "funcionario@gmail.com" } 
            } 
          } 
        },
        "responses": { 
          "201": { 
            "description": "Usuário criado com sucesso", 
            "content": { 
              "application/json": { 
                "schema": { "$ref": "#/components/schemas/RegisterResponse" }, 
                "example": { 
                  "id": "550e8400-e29b-41d4-a716-446655440000",
                  "email": "funcionario@gmail.com", 
                  "tipo_usuario": "FUNCIONARIO",
                  "status": "ATIVO",
                  "mensagem": "Usuário criado com sucesso. Senha enviada por e-mail." 
                } 
              } 
            } 
          },
          "400": { 
            "description": "Dados inválidos ou domínio não permitido",
            "content": { 
              "application/json": { 
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "examples": {
                  "dominio_invalido": {
                    "summary": "Domínio não permitido",
                    "value": {
                      "error": "dominio_nao_permitido",
                      "message": "Apenas emails dos domínios gmail.com são permitidos para auto-cadastro"
                    }
                  },
                  "validation_error": {
                    "summary": "Email inválido",
                    "value": {
                      "error": "validation_error",
                      "message": "Email deve ter formato válido"
                    }
                  }
                }
              } 
            } 
          },
          "409": { 
            "description": "Email já cadastrado",
            "content": { 
              "application/json": { 
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "example": {
                  "error": "email_ja_cadastrado",
                  "message": "Este email já está cadastrado no sistema"
                }
              } 
            } 
          }
        }
      }
    },
    "/auth/v1/logout": {
      "post": {
        "summary": "Logout (invalida token atual ou todos)",
        "tags": ["auth"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [ { "name": "x-invalidate-all", "in": "header", "schema": { "type": "boolean" }, "required": false, "description": "Se true, invalida todos os tokens ativos do usuário" } ],
        "responses": { "200": { "description": "OK", "content": { "application/json": { "schema": { "type": "object", "properties": { "sucesso": { "type": "boolean" } } }, "example": { "sucesso": true } } } }, "401": { "description": "Token ausente ou inválido" } }
      }
    },
  "/auth/v1/refresh": {
      "post": {
        "summary": "Gera novo par (rotação do refresh atual)",
        "tags": ["auth"],
    "requestBody": { "required": false, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LegacyRefreshInput" }, "example": { } } } },
    "responses": { "200": { "description": "Novo access token (refresh rotacionado em cookie)", "headers": { "Set-Cookie": { "schema": { "type": "string", "example": "refreshToken=<novo_refresh>; Path=/auth/v1; HttpOnly; SameSite=Strict" }, "description": "Novo refresh token rotacionado" } }, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthAccessOnly" }, "example": { "accessToken": "<novo_access>", "tokenType": "Bearer", "expiresInHours": 8 } } } }, "401": { "description": "Refresh inválido ou expirado" } }
      }
    }
  },
  "components": {
    "securitySchemes": { "bearerAuth": { "type": "http", "scheme": "bearer", "bearerFormat": "JWT" } },
    "schemas": {
      "LoginInput": { "type": "object", "required": ["email", "senha"], "properties": { "email": { "type": "string", "format": "email" }, "senha": { "type": "string", "minLength": 6 } } },
      "RegisterInput": { 
        "type": "object", 
        "required": ["email"], 
        "properties": { 
          "email": { 
            "type": "string", 
            "format": "email",
            "description": "Email do funcionário que deve pertencer a um domínio autorizado (ex: @gmail.com)",
            "example": "funcionario@gmail.com"
          } 
        },
        "description": "Dados necessários para auto-cadastro. Apenas o email é obrigatório."
      },
  "LegacyRefreshInput": { "type": "object", "description": "(Depreciado) Aceito apenas para compatibilidade: refreshToken no corpo. Preferir cookie.", "properties": { "refreshToken": { "type": "string" } } },
  "AuthAccessOnly": { "type": "object", "properties": { "accessToken": { "type": "string" }, "tokenType": { "type": "string", "example": "Bearer" }, "expiresInHours": { "type": "integer", "example": 8 } } },
      "RegisterResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "ID único do usuário criado"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email do usuário"
          },
          "tipo_usuario": {
            "type": "string",
            "enum": ["FUNCIONARIO"],
            "description": "Tipo do usuário, sempre FUNCIONARIO para auto-cadastro"
          },
          "status": {
            "type": "string",
            "enum": ["ATIVO"],
            "description": "Status do usuário, sempre ATIVO para auto-cadastro"
          },
          "mensagem": {
            "type": "string",
            "description": "Mensagem informativa sobre o resultado do cadastro"
          }
        },
        "description": "Resposta do auto-cadastro com informações do usuário criado"
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Código do erro"
          },
          "message": {
            "type": "string",
            "description": "Mensagem detalhada do erro"
          }
        },
        "description": "Estrutura padrão de resposta de erro"
      },
      "DecodedAccessPayload": { "type": "object", "properties": { "sub": { "type": "string" }, "email": { "type": "string" }, "status": { "type": "string" }, "roles": { "type": "array", "items": { "type": "string" } }, "type": { "type": "string", "example": "access" }, "iat": { "type": "integer" }, "exp": { "type": "integer" } } }
    }
  }
}
